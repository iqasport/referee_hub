<Project Sdk="Microsoft.NET.Sdk.Web">
  <Sdk Name="Yarn.MSBuild" Version="1.22.19" />
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CoreAdmin" Version="3.0.0" />
    <PackageReference Include="Excos.Options" Version="1.0.0-alpha1" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="8.0.17" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.17" />
    <PackageReference Include="Microsoft.Extensions.Telemetry" Version="9.6.0" />
    <PackageReference Include="OpenTelemetry.Contrib.Instrumentation.AWS" Version="1.0.2" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" Version="1.12.0" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol.Logs" Version="1.5.0-rc.1" />
    <PackageReference Include="Azure.Monitor.OpenTelemetry.Exporter" Version="1.4.0" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" Version="1.12.0" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" Version="1.12.0" />
    <PackageReference Include="OpenTelemetry.Instrumentation.EntityFrameworkCore" Version="1.0.0-beta.12" />
    <PackageReference Include="OpenTelemetry.Instrumentation.EventCounters" Version="1.0.0-alpha.2" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Hangfire" Version="1.0.0-beta.4" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Process" Version="0.5.0-beta.7" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" Version="1.12.0" />
    <PackageReference Include="Stripe.net" Version="48.3.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="9.0.1" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ManagementHub.Mailers\ManagementHub.Mailers.csproj" />
    <ProjectReference Include="..\ManagementHub.Models\ManagementHub.Models.csproj" />
    <ProjectReference Include="..\ManagementHub.Processing\ManagementHub.Processing.csproj" />
    <ProjectReference Include="..\ManagementHub.Serialization\ManagementHub.Serialization.csproj" />
    <ProjectReference Include="..\ManagementHub.Storage\ManagementHub.Storage.csproj" />
  </ItemGroup>

  <!-- Workaround for ASP.NET Core bug -->
  <Target Name="CreateWWWrootForLocalRun" BeforeTargets="Build">
    <Exec WorkingDirectory="$(MSBuildProjectDirectory)" Command="mkdir wwwroot" Condition="!Exists('$(MSBuildProjectDirectory)/wwwroot')" />
  </Target>

  <!-- FRONTEND BUILD AND INCLUDE -->

  <PropertyGroup>
    <!-- only build front end if it hasn't been built already -->
    <BuildFrontend Condition=" ! Exists('$(SolutionDir)/../frontend/dist/index.html')">true</BuildFrontend>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildFrontend)' == 'true'">
    <YarnWorkingDir>$(SolutionDir)/../frontend</YarnWorkingDir>
    <YarnBuildCommand>run build:dev</YarnBuildCommand>
    <YarnBuildCommand Condition="'$(Configuration)' == 'Release'">run build:prod</YarnBuildCommand>
  </PropertyGroup>

  <Target Name="YarnInstall" Condition="'$(BuildFrontend)' == 'true'" BeforeTargets="YarnBuild">
    <Yarn Command="install --immutable" Condition=" ! Exists('$(SolutionDir)/../frontend/node_modules/')" WorkingDirectory="$(YarnWorkingDir)" />
  </Target>

  <Target Name="IncludeFrontendDist" AfterTargets="YarnBuild">
    <ItemGroup>
      <FrontendFiles Include="$(SolutionDir)/../frontend/dist/**/*" />
      <Content Include="@(FrontendFiles)">
        <TargetPath>wwwroot/%(FrontendFiles.RecursiveDir)%(FrontendFiles.Filename)%(FrontendFiles.Extension)</TargetPath>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>

  <!-- PUBLISHING WITH DOCKER -->
  <!-- see https://learn.microsoft.com/en-us/dotnet/core/docker/publish-as-container -->

  <PropertyGroup>
    <ContainerImageName>iqasport/management-hub</ContainerImageName>
    <ContainerImageTags>latest</ContainerImageTags>
  </PropertyGroup>
  <ItemGroup>
    <ContainerPort Include="443" Type="tcp" />
  </ItemGroup>
  
  <Target Name="AddVolumeToContainer" AfterTargets="PublishContainer">
    <Exec Command="docker build -t iqasport/management-hub:latest ." WorkingDirectory="$(SolutionDir)/../../docker/build" />
  </Target>

</Project>